#!/bin/bash

set -e

if [ $# -lt 1 ]; then
  echo "$0: takes at least one argument: 'get-deps', 'clean', 'build fab' or 'build release <version_number>'"
  exit 1
fi

echo "Enabling Go modules through build script (GO111MODULE=on)"
GO111MODULE=on

# cleans test directories helm_repos
function clean() {
  echo "cleaning testdata files"
  echo "cleaning testdata/fixtures/install/infra/components"
  rm -rf testdata/fixtures/install/infra/components

  echo "cleaning testdata/fixtures/install/infra/helm_repos"
  rm -rf testdata/fixtures/install/infra/helm_repos

  echo "cleaning testdata/fixtures/install-yaml/components"
  rm -rf testdata/fixtures/install-yaml/components

  echo "cleaning testdata/fixtures/install-yaml/helm_repos"
  rm -rf testdata/fixtures/install-yaml/helm_repos
}

# runs go get ./...
function get-deps() {
  clean
  echo "Running 'go mod download'"
  go mod download

  echo "  Competed 'go mod download'"
}

if [ $1 == "get-deps" ]; then
  get-deps
fi

if [ $1 == "clean" ]; then
  clean
fi

if [ $1 == "build" ]; then

  # build fabrikate
  if [ $2 == "fab" ]; then
    get-deps
    echo "go build -o fab"
    go build -o fab
    echo "finished building fab"
  fi

  # gets fabrikate dependencies and builds fabrikate release
  if [ $2 == "release" ]; then
    if [ $# -ne 3 ]; then
      echo "Error: build release takes one argument: the version number of the release."
      exit 1
    fi

    get-deps

    rm -rf releases/$3
    mkdir -p releases/$3

    echo "Building and zipping binaries"
    echo "  Building for Mac"
    GOOS=darwin GOARCH=amd64 go build -o fab
    echo "  Zipping:"
    echo "    $(zip releases/$3/fab-v$3-darwin-amd64.zip fab)"

    echo "  Building for Linux"
    echo "  Zipping:"
    GOOS=linux GOARCH=amd64 go build -o fab
    echo "    $(zip releases/$3/fab-v$3-linux-amd64.zip fab)"

    echo "Release zip files can be found in releases/$3"

    GIT_TAG=v$3
    echo "Tagging v-prefixed semver tag: $GIT_TAG"
    git tag $GIT_TAG
    echo "  Tag $GIT_TAG created. Push this tag to repository to allow 'go get github.com/microsoft/fabrikate@$GIT_TAG'"
    echo "  Command 'go get github.com/microsoft/fabrikate' will now point to $GIT_TAG if it is the highest v-prefixed semver tag in repository"
  fi
fi
